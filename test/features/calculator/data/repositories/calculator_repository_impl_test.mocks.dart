// Mocks generated by Mockito 5.4.6 from annotations
// in string_calculator_kata/test/features/calculator/data/repositories/calculator_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:string_calculator_kata/features/calculator/data/datasources/calculator_local_datasource.dart'
    as _i3;
import 'package:string_calculator_kata/features/calculator/data/models/calculation_model.dart'
    as _i5;
import 'package:string_calculator_kata/features/calculator/data/models/calculation_result_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCalculationResultModel_0 extends _i1.SmartFake
    implements _i2.CalculationResultModel {
  _FakeCalculationResultModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CalculatorLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalculatorLocalDataSource extends _i1.Mock
    implements _i3.CalculatorLocalDataSource {
  MockCalculatorLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CalculationResultModel> addNumbers(String? input) =>
      (super.noSuchMethod(
            Invocation.method(#addNumbers, [input]),
            returnValue: _i4.Future<_i2.CalculationResultModel>.value(
              _FakeCalculationResultModel_0(
                this,
                Invocation.method(#addNumbers, [input]),
              ),
            ),
          )
          as _i4.Future<_i2.CalculationResultModel>);

  @override
  _i4.Future<List<_i5.CalculationModel>> getCalculationHistory() =>
      (super.noSuchMethod(
            Invocation.method(#getCalculationHistory, []),
            returnValue: _i4.Future<List<_i5.CalculationModel>>.value(
              <_i5.CalculationModel>[],
            ),
          )
          as _i4.Future<List<_i5.CalculationModel>>);

  @override
  _i4.Future<void> saveCalculation(_i5.CalculationModel? calculation) =>
      (super.noSuchMethod(
            Invocation.method(#saveCalculation, [calculation]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> clearHistory() =>
      (super.noSuchMethod(
            Invocation.method(#clearHistory, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<bool> validateInput(String? input) =>
      (super.noSuchMethod(
            Invocation.method(#validateInput, [input]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  List<String> getExamples() =>
      (super.noSuchMethod(
            Invocation.method(#getExamples, []),
            returnValue: <String>[],
          )
          as List<String>);
}
